"""
File: rename_roboflow_files.py
Author: Richárd Rádli
E-mail: radli.richard@mik.uni-pannon.hu
Date: May 23, 2023

Description: Roboflow tends to add name extensions to image files, also, it converts images to .jpg format. This program
chops off the name extensions.
"""

import os

from config.const import DATASET_PATH
from utils.utils import file_reader


# ----------------------------------------------------------------------------------------------------------------------
# ---------------------------------------------- R E N A M E   F I L E S -----------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
def rename_files(images_dir: str, labels_dir: str) -> None:
    """
    This function renames the files, generated by Roboflow. Cuts the addon names of the files, and changes the name of
    the extensions to .png and .txt.
    :param images_dir: Path to the image files.
    :param labels_dir: Path to the text files.
    :return: None
    """

    images = file_reader(images_dir, "jpg")
    text = file_reader(labels_dir, "txt")

    existing_files = os.listdir(images_dir)

    for idx, (img, txt) in enumerate(zip(images, text)):
        image_file_name = os.path.basename(img)
        image_file_name = image_file_name.replace("_jpg", ".jpg")
        image_file_name = '_'.join(image_file_name.split('.')[:2])
        image_file_name = image_file_name.replace("_jpg", ".jpg")

        txt_file_name = os.path.basename(txt)
        txt_file_name = txt_file_name.replace("_jpg", ".jpg")
        txt_file_name = '_'.join(txt_file_name.split('.')[:2])
        txt_file_name = txt_file_name.replace("_jpg", ".txt")

        # Check if the image file name already exists
        original_file_name = image_file_name
        index = 0
        while image_file_name in existing_files:
            index += 1
            image_file_name = "{}_{:d}.jpg".format(original_file_name.rsplit('_', 1)[0], index)

        existing_files.append(image_file_name)

        # Check if the text file name already exists
        original_file_name = txt_file_name
        index = 0
        while txt_file_name in existing_files:
            index += 1
            txt_file_name = "{}_{:d}.txt".format(original_file_name.rsplit('_', 1)[0], index)

        existing_files.append(txt_file_name)

        # Rename the corresponding text file
        os.rename(img, os.path.join(images_dir, image_file_name))
        os.rename(txt, os.path.join(labels_dir, txt_file_name))

        # Print the updated file names
        print("Image file:", image_file_name)


# ----------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------- M A I N ------------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
def main() -> None:
    """
    The main function of the file. One can set the directory paths here.
    :return: None
    """

    images_dir = DATASET_PATH.get_data_path("ogyei_customer_images")
    labels_dir = DATASET_PATH.get_data_path("ogyei_customer_segmentation_labels")

    rename_files(images_dir, labels_dir)


# ----------------------------------------------------------------------------------------------------------------------
# ----------------------------------------------------- __M A I N__ ----------------------------------------------------
# ----------------------------------------------------------------------------------------------------------------------
if __name__ == "__main__":
    main()
